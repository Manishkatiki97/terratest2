version: 2.1

jobs:
  
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            export AWS_ACCESS_KEY_ID=$(env | awk -F= "/^AWS_ACCESS_KEY_ID=/ {print \$2}")
            export AWS_SECRET_ACCESS_KEY=$(env | awk -F= "/^AWS_SECRET_ACCESS_KEY=/ {print \$2}")
            terraform init -input=false
            terraform plan -out tfapply 
      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    working_directory: /tmp/project
    docker:
      - image: cimg/go:1.16.2
    steps:
      - checkout    
      - run:
          name: test
          command: |
            export AWS_ACCESS_KEY_ID=$(env | awk -F= "/^AWS_ACCESS_KEY_ID=/ {print \$2}")
            export AWS_SECRET_ACCESS_KEY=$(env | awk -F= "/^AWS_SECRET_ACCESS_KEY=/ {print \$2}")
            uname -a
            wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip
            pwd
            ls
            unzip terraform_0.12.24_linux_amd64.zip
            ls /tmp/project
            chmod 755 terraform
            #terraform --version
            ls /usr/local/bin
            sudo mv terraform /usr/local/bin
            terraform --version
            which terraform
            go test -v -run TestTerraformAWS
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            export AWS_ACCESS_KEY_ID=$(env | awk -F= "/^AWS_ACCESS_KEY_ID=/ {print \$2}")
            export AWS_SECRET_ACCESS_KEY=$(env | awk -F= "/^AWS_SECRET_ACCESS_KEY=/ {print \$2}")
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            export AWS_ACCESS_KEY_ID=$(env | awk -F= "/^AWS_ACCESS_KEY_ID=/ {print \$2}")
            export AWS_SECRET_ACCESS_KEY=$(env | awk -F= "/^AWS_SECRET_ACCESS_KEY=/ {print \$2}")
            terraform plan -destroy -out tfdestroy
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            export AWS_ACCESS_KEY_ID=$(env | awk -F= "/^AWS_ACCESS_KEY_ID=/ {print \$2}")
            export AWS_SECRET_ACCESS_KEY=$(env | awk -F= "/^AWS_SECRET_ACCESS_KEY=/ {print \$2}")
            terraform apply -auto-approve tfdestroy
workflows:
  version: 2.1
  plan_approve_apply:
    jobs:
      # - tflint-tfsec
      # - plan-apply:
      #     requires:
      #       - tflint-tfsec
      - plan-apply
      - test:
          requires:
            - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
      - plan-destroy:
          requires:
            - apply
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          requires:
            - hold-destroy